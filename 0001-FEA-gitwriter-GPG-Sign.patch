From 3d47b50999c56214c7f44866291d3479749eeb4e Mon Sep 17 00:00:00 2001
From: Texas0295 <kimura@texas0295.top>
Date: Thu, 11 Sep 2025 20:07:16 +0800
Subject: [PATCH] [FEA] gitwriter: GPG Sign

Signed-off-by: Texas0295 <kimura@texas0295.top>
---
 .../svnserver/repository/git/GitWriter.kt     | 53 ++++++++++++++++++-
 1 file changed, 52 insertions(+), 1 deletion(-)

diff --git a/src/main/kotlin/svnserver/repository/git/GitWriter.kt b/src/main/kotlin/svnserver/repository/git/GitWriter.kt
index 9dd18dc4..88d0749a 100644
--- a/src/main/kotlin/svnserver/repository/git/GitWriter.kt
+++ b/src/main/kotlin/svnserver/repository/git/GitWriter.kt
@@ -26,6 +26,8 @@ import svnserver.repository.git.prop.PropertyMapping
 import svnserver.repository.git.push.GitPusher
 import svnserver.repository.locks.LockDesc
 import svnserver.repository.locks.LockStorage
+import java.lang.ProcessBuilder
+import java.util.regex.Pattern
 import java.io.IOException
 import java.util.*
 import java.util.concurrent.locks.ReentrantLock
@@ -294,7 +296,56 @@ class GitWriter internal constructor(val branch: GitBranch, private val pusher:
                 commitBuilder.setParentId(parentCommit.id)
             }
             commitBuilder.setTreeId(treeId)
-            val commitId: ObjectId = inserter.insert(commitBuilder)
+            fun externalSignedCommit(): ObjectId? {
+                try {
+                    val repoDir = branch.repository.git.directory.absolutePath
+                    val cmd = mutableListOf("git", "-C", repoDir, "commit-tree", "-S", treeId.name())
+                    if (parentCommit != null) {
+                        cmd.addAll(listOf("-p", parentCommit.id.name()))
+                    }
+                    for (line in message.split("\n")) {
+                        cmd.addAll(listOf("-m", line))
+                    }
+                    val pb = ProcessBuilder(cmd).redirectErrorStream(true)
+                    val env = pb.environment()
+                    env["HOME"] = System.getProperty("user.home")
+                    env["GNUPGHOME"] = System.getenv("GNUPGHOME") ?: (System.getProperty("user.home") + "/.gnupg")
+                    env["PATH"] = (System.getenv("PATH") ?: "") +
+                                  (if ((System.getenv("PATH") ?: "").endsWith(":")) "" else ":") +
+                                  (System.getProperty("user.home") + "/.local/bin")
+                    env["GIT_AUTHOR_NAME"] = ident.name
+                    env["GIT_AUTHOR_EMAIL"] = ident.emailAddress ?: ""
+                    env["GIT_COMMITTER_NAME"] = ident.name
+                    env["GIT_COMMITTER_EMAIL"] = ident.emailAddress ?: ""
+
+                    val p = pb.start()
+                    val out = p.inputStream.bufferedReader().readText().trim()
+                    val code = p.waitFor()
+                    if (code == 0 && out.isNotBlank()) {
+                        val first = out.lineSequence().first().trim()
+                        val hex40 = Pattern.compile("^[0-9a-fA-F]{40}$")
+                        if (hex40.matcher(first).matches()) {
+                            log.info("External signed commit created: {}", first)
+                            return ObjectId.fromString(first)
+                        } else {
+                            val candidate = first.split(Regex("\\s+")).last()
+                            if (hex40.matcher(candidate).matches()) {
+                                log.info("External signed commit created: {}", candidate)
+                                return ObjectId.fromString(candidate)
+                            }
+                        }
+                        log.warn("External commit-tree returned non-hash output: {}", out)
+                    } else {
+                        log.warn("External commit-tree failed (code={}): {}", code, out)
+                    }
+                } catch (t: Throwable) {
+                    log.warn("External commit-tree exception: {}", t.toString())
+                }
+                return null
+            }
+
+            val signedId = externalSignedCommit()
+            val commitId: ObjectId = signedId ?: inserter.insert(commitBuilder)
             inserter.flush()
             log.info("Create commit {}: {}", commitId.name(), StringHelper.getFirstLine(message))
             if (filterMigration(RevWalk(branch.repository.git).parseTree(treeId)) != 0) {
-- 
2.51.0

